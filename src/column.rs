use std::fmt;

use serde::Serialize;

#[derive(Serialize, Copy, Clone)]
#[allow(dead_code)]
pub enum Vertical {
    Finance,
    CS,
    Crypto,
    Philosophy,
    Business,
    ML,
    Enterme,
    Politics,
    Geography,
    Food,
    Math,
    Music,
    Economy,
    Activity,
    Society,
    Biology,
    Physics,
    Game,
    Medical,
    Transport,
    Law,
    Energy,
    Design,
    Language,
}

impl fmt::Display for Vertical {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            Vertical::Finance => write!(f, "üí∞"),
            Vertical::CS => write!(f, "üíª"),
            Vertical::Crypto => write!(f, "ü•á"),
            Vertical::Philosophy => write!(f, "üíé"),
            Vertical::Business => write!(f, "üíº"),
            Vertical::ML => write!(f, "‚öôÔ∏è"),
            Vertical::Enterme => write!(f, "üé•"),
            Vertical::Politics => write!(f, "üì¢"),
            Vertical::Geography => write!(f, "üåè"),
            Vertical::Food => write!(f, "üçö"),
            Vertical::Math => write!(f, "üìê"),
            Vertical::Music => write!(f, "üéµ"),
            Vertical::Economy => write!(f, "üí∏"),
            Vertical::Activity => write!(f, "ü•è"),
            Vertical::Society => write!(f, "üï∏Ô∏è"),
            Vertical::Biology => write!(f, "ü¶†"),
            Vertical::Physics => write!(f, "üçé"),
            Vertical::Game => write!(f, "üéÆ"),
            Vertical::Medical => write!(f, "üíâ"),
            Vertical::Transport => write!(f, "üöã"),
            Vertical::Law => write!(f, "‚öñÔ∏è"),
            Vertical::Energy => write!(f, "‚ö°"),
            Vertical::Design => write!(f, "üñºÔ∏è"),
            Vertical::Language => write!(f, "üê®"),
        }
    }
}

#[derive(Serialize)]
#[allow(dead_code)]
pub enum Horizontal {
    Project,
    Content,
    Thought,
    Archive,
    Invisible,
}

#[derive(Serialize)]
#[allow(dead_code)]
pub enum External {
    Wikipedia,
    Investopedia,
}

#[derive(Serialize)]
#[allow(dead_code)]
pub enum Version {
    Aug2022,
    May2022,
    Mar2022,
    Feb2022,
    Jan2022,
}

#[derive(Serialize)]
#[allow(dead_code)]
pub enum Temporary {
    Debug,
    NoVerticalPerson,
}

#[derive(Serialize)]
#[serde(untagged)]
#[allow(dead_code)]
pub enum MultiSelectColumn {
    Vertical(Vertical),
    Horizontal(Horizontal),
    External(External),
    Version(Version),
    Templorary(Temporary),
}
